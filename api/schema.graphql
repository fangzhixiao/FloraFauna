scalar GraphQLDate

enum SightingType {
    ANIMAL
    PLANT
}

type Location {
    lat: Float!
    lng: Float!
}

type Comment {
    commenterId: String!
    content:String!
    createdUTC: String!
}

input CommentInput {
    commenterId: String!
    content:String!
    createdUTC: String!
}

type Post {
    _id: ID!
    id: String!
    title: String!
    sightingType: SightingType!
    authorId: String!
    createdUTC: String!
    spottedUTC: String!
    timezone: String!
    location: Location!
    imageUrls:[String]
    description: String
    comments: [Comment]
}

type User {
    _id: ID!
    id: Int!
    signedIn: Boolean!
    givenName: String
    email: String
}

input LocationInput {
    lat: Float!
    lng: Float!
}

input UserInput {
    givenName: String
    email: String
}

"Toned down Posts, used as inputs, without server generated values. ISO 8601 "
input PostInput {
    title: String!
    sightingType: SightingType!
    authorId: String!
    spottedUTC: String!
    timezone: String!
    location: LocationInput!
    images:[String]
    description: String
}

"""Inputs for postUpdate: all are optional. Whichever is specified will be set to the given value,
undefined fields will remain unmmodified."""

input PostUpdateInput {
    title: String
    sightingType: SightingType
    spottedUTC: String
    location: LocationInput
    description: String
    comments: [CommentInput]
}

##### Top level declarations
# Query and Mutation define the entry point of every GraphQL query
# TODO redefine user of query with user(id: String!) when appropriate -- front end will need to update for this change.
type Query {
    about: String!
    postList(
        sightingType: SightingType
        search: String
        authorId: String
        dateUTC: String
        minTimeUTC: String
        maxTimeUTC: String
    ): [Post!]!
    post(id: String!): Post!
    user(id:String): User!
}

type Mutation {
    setAboutMessage(message: String!): String
    postAdd(post: PostInput!): Post!
    postUpdate(id: String!, changes: PostUpdateInput!): Post!
    postDelete(id: String!): Boolean!
    postRestore(id: String!): Boolean!
}
